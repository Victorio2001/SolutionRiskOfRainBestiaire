// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiskOfRain.DataContext;

#nullable disable

namespace RiskOfRain.DataContext.Migrations
{
    [DbContext(typeof(RiskOfRainContext))]
    [Migration("20250129140019_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RiskOfRain.Model.Attaque", b =>
                {
                    b.Property<int>("IdAttaque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAttaque"));

                    b.Property<int>("CoutPointCombat")
                        .HasColumnType("int");

                    b.Property<int>("Magie")
                        .HasColumnType("int");

                    b.Property<string>("NomAttaque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Physique")
                        .HasColumnType("int");

                    b.HasKey("IdAttaque");

                    b.ToTable("Attaques");
                });

            modelBuilder.Entity("RiskOfRain.Model.AttaqueMonstre", b =>
                {
                    b.Property<int>("IdAttaqueMonstre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAttaqueMonstre"));

                    b.Property<int>("IdAttaque")
                        .HasColumnType("int");

                    b.Property<int>("IdMonstre")
                        .HasColumnType("int");

                    b.HasKey("IdAttaqueMonstre");

                    b.HasIndex("IdAttaque");

                    b.HasIndex("IdMonstre");

                    b.ToTable("AttaqueMonstre");
                });

            modelBuilder.Entity("RiskOfRain.Model.Monstre", b =>
                {
                    b.Property<int>("IdMonstre")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMonstre"));

                    b.Property<string>("CouleurMonstre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomMonstre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PointCombatMonstre")
                        .HasColumnType("int");

                    b.Property<int>("PvMaxMonstre")
                        .HasColumnType("int");

                    b.Property<int>("PvMonstre")
                        .HasColumnType("int");

                    b.Property<string>("TypeMonstre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMonstre");

                    b.ToTable("Monstres");
                });

            modelBuilder.Entity("RiskOfRain.Model.AttaqueMonstre", b =>
                {
                    b.HasOne("RiskOfRain.Model.Attaque", "Attaque")
                        .WithMany("AttaqueMonstre")
                        .HasForeignKey("IdAttaque")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiskOfRain.Model.Monstre", "Monstre")
                        .WithMany("AttaqueMonstre")
                        .HasForeignKey("IdMonstre")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Attaque");

                    b.Navigation("Monstre");
                });

            modelBuilder.Entity("RiskOfRain.Model.Attaque", b =>
                {
                    b.Navigation("AttaqueMonstre");
                });

            modelBuilder.Entity("RiskOfRain.Model.Monstre", b =>
                {
                    b.Navigation("AttaqueMonstre");
                });
#pragma warning restore 612, 618
        }
    }
}
